maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
theory WireGuard begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: AEAD/3, DH/2, dec/2[destructor], expdh/2, fst/1, h/1, hash1/1,
           hash2/2, kdf1/2, kdf2/2, kdf3/2, pair/2, pars1/1[destructor],
           pars12/2[destructor], pars13/2[destructor], pars22/2[destructor],
           pars23/2[destructor], pars33/2[destructor], snd/1, triple/3, true/0,
           verify/3[destructor]
equations:
    dec(AEAD(k, p, a), k) = p,
    fst(<x.1, x.2>) = x.1,
    pars1(x) = x,
    pars12(<x_1, x_2>, c_32) = x_1,
    pars13(triple(x_1, x_2, x_3), c_32) = x_1,
    pars22(<x_1, x_2>, c_32) = x_2,
    pars23(triple(x_1, x_2, x_3), c_32) = x_2,
    pars33(triple(x_1, x_2, x_3), c_32) = x_3,
    snd(<x.1, x.2>) = x.2,
    verify(AEAD(k, p, a), a, k) = true



heuristic: i











lemma injIP [reuse]:
  all-traces
  "∀ Spub_i Spub_r Spriv_r #k.
    (RespRecv( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k) ⇒
    ((∃ #j Spriv_i.
       (#j < #k) ∧
       (InitStart( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #j)) ∨
     (∃ #a. K( Spriv_r ) @ #a))"
/*
guarded formula characterizing all counter-examples:
"∃ Spub_i Spub_r Spriv_r #k.
  (RespRecv( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k)
 ∧
  (∀ #j Spriv_i.
    (InitStart( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #j)
   ⇒
    ¬(#j < #k)) ∧
  (∀ #a. (K( Spriv_r ) @ #a) ⇒ ⊥)"
*/
simplify
by solve( State_11111121111111111( ~46_sid_r, ~Spriv_i, ~Spriv_r,
                                   302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
          ) ▶₀ #k )

lemma injPI [reuse, use_induction]:
  all-traces
  "∀ Spub_i Spub_r Spriv_i #k.
    (InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k) ⇒
    ((∃ Spriv_r #j.
       (#j < #k) ∧ (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #j)) ∨
     (∃ Spriv_i.1 #a. K( Spriv_i.1 ) @ #a))"
/*
guarded formula characterizing all counter-examples:
"∃ Spub_i Spub_r Spriv_i #k.
  (InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k)
 ∧
  (∀ Spriv_r #j.
    (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #j)
   ⇒
    ¬(#j < #k)) ∧
  (∀ Spriv_i.1 #a. (K( Spriv_i.1 ) @ #a) ⇒ ⊥)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∀ Spub_i Spub_r Spriv_i #k.
           (InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k)
          ⇒
           ((last(#k)) ∨
            (∃ Spriv_r #j.
              (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #j)
             ∧
              (¬(last(#j))) ∧ (#j < #k)) ∨
            (∃ Spriv_i.1 #a. (K( Spriv_i.1 ) @ #a) ∧ ¬(last(#a)))))  ∥
         (∃ x #t3.
           (ChannelIn( x ) @ #t3)
          ∧
           (¬(last(#t3))) ∧
           (∀ #t2.
             (K( x ) @ #t2)
            ⇒
             ((last(#t2)) ∨
              (#t2 = #t3) ∨
              (#t3 < #t2) ∨
              (∃ #t1.
                (Event( ) @ #t1)
               ∧
                (¬(last(#t1))) ∧
                (((#t1 = #t2) ∨ (#t2 < #t1))) ∧
                (((#t3 = #t1) ∨ (#t1 < #t3)))) ∨
              (∃ #t1 xp.
                (K( xp ) @ #t1)
               ∧
                (¬(last(#t1))) ∧
                (((#t1 = #t2) ∨ (#t2 < #t1))) ∧
                (¬(#t1 = #t2)) ∧
                (((#t3 = #t1) ∨ (#t1 < #t3))))))) )
    case case_1
    by solve( State_11111111111111111111111111111( ~100_Epriv_i, ~92_sid_i,
                                                   ~Spriv_i, ~Spriv_r, 015_Pars1, 016_Pars2, 029_Dec,
                                                   2022_Pars3, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                                   258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                                   879_Pars1, 880_Pars2, 88_a
              ) ▶₀ #k )
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma sanity_InitStart [reuse]:
  all-traces
  "∃ Spub_i Spub_r Spriv_i #k.
    InitStart( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k"
/*
guarded formula characterizing all counter-examples:
"∀ Spub_i Spub_r Spriv_i #k.
  (InitStart( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k) ⇒ ⊥"
*/
simplify
SOLVED // trace found

lemma sanity_InitAccept [reuse]:
  all-traces
  "∃ Spub_i Spub_r Spriv_i #k.
    InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k"
/*
guarded formula characterizing all counter-examples:
"∀ Spub_i Spub_r Spriv_i #k.
  (InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #k) ⇒ ⊥"
*/
simplify
SOLVED // trace found

lemma sanity_RespRecv [reuse]:
  all-traces
  "∃ Spub_i Spub_r Spriv_r #k.
    RespRecv( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k"
/*
guarded formula characterizing all counter-examples:
"∀ Spub_i Spub_r Spriv_r #k.
  (RespRecv( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k) ⇒ ⊥"
*/
simplify
SOLVED // trace found

lemma sanity_RespAnsw [reuse]:
  all-traces
  "∃ Spub_i Spub_r Spriv_r #k.
    RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k"
/*
guarded formula characterizing all counter-examples:
"∀ Spub_i Spub_r Spriv_r #k.
  (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #k) ⇒ ⊥"
*/
simplify
SOLVED // trace found

lemma key_secrecy [reuse]:
  all-traces
  "∀ Spub_i Spub_r Spriv_r Spriv_i #i #i2.
    ((InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #i) ∧
     (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #i2)) ⇒
    ((((((((¬(∃ #j. K( Spub_i ) @ #j)) ∧ (¬(∃ #j. K( Spub_r ) @ #j))) ∧
          (¬(∃ #j. K( Spriv_i ) @ #j))) ∧
         (¬(∃ #j. K( Spriv_r ) @ #j))) ∨
        (((∃ #j. K( Spub_i ) @ #j) ∨ (∃ #j. K( Spub_r ) @ #j)) ∨
         (∃ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spub_r ) @ #j2)))) ∨
       (((∃ #j. K( Spriv_i ) @ #j) ∨ (∃ #j. K( Spriv_r ) @ #j)) ∨
        (∃ #j #j2. (K( Spriv_i ) @ #j) ∧ (K( Spriv_r ) @ #j2)))) ∨
      ((∃ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spriv_r ) @ #j2)) ∨
       (∃ #j #j2. (K( Spub_r ) @ #j) ∧ (K( Spriv_i ) @ #j2)))) ∨
     ((((∃ #j. K( Spub_i ) @ #j) ∨ (∃ #j. K( Spub_r ) @ #j)) ∨
       (∃ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spub_r ) @ #j2))) ∧
      ((¬(∃ #j. K( Spriv_i ) @ #j)) ∨ (¬(∃ #j. K( Spriv_r ) @ #j)))))"
/*
guarded formula characterizing all counter-examples:
"∃ Spub_i Spub_r Spriv_r Spriv_i #i #i2.
  (InitAccept( 'Init', 'Resp', Spub_i, Spub_r, Spriv_i ) @ #i) ∧
  (RespAnsw( 'Init', 'Resp', Spub_i, Spub_r, Spriv_r ) @ #i2)
 ∧
  (((∃ #j. (K( Spub_i ) @ #j)) ∨
    (∃ #j. (K( Spub_r ) @ #j)) ∨
    (∃ #j. (K( Spriv_i ) @ #j)) ∨
    (∃ #j. (K( Spriv_r ) @ #j)))) ∧
  (∀ #j. (K( Spub_i ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (K( Spub_r ) @ #j) ⇒ ⊥) ∧
  (∀ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spub_r ) @ #j2) ⇒ ⊥) ∧
  (∀ #j. (K( Spriv_i ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (K( Spriv_r ) @ #j) ⇒ ⊥) ∧
  (∀ #j #j2. (K( Spriv_i ) @ #j) ∧ (K( Spriv_r ) @ #j2) ⇒ ⊥) ∧
  (∀ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spriv_r ) @ #j2) ⇒ ⊥) ∧
  (∀ #j #j2. (K( Spub_r ) @ #j) ∧ (K( Spriv_i ) @ #j2) ⇒ ⊥) ∧
  ((((∀ #j. (K( Spub_i ) @ #j) ⇒ ⊥) ∧
     (∀ #j. (K( Spub_r ) @ #j) ⇒ ⊥) ∧
     (∀ #j #j2. (K( Spub_i ) @ #j) ∧ (K( Spub_r ) @ #j2) ⇒ ⊥)) ∨
    ((∃ #j. (K( Spriv_i ) @ #j)) ∧ (∃ #j. (K( Spriv_r ) @ #j)))))"
*/
simplify
solve( (∃ #j. (K( 'g'^~Spriv_i ) @ #j))  ∥
       (∃ #j. (K( 'g'^~Spriv_r ) @ #j))  ∥ (∃ #j. (K( ~Spriv_i ) @ #j))  ∥
       (∃ #j. (K( ~Spriv_r ) @ #j)) )
  case case_1
  by contradiction /* from formulas */
next
  case case_2
  by contradiction /* from formulas */
next
  case case_3
  by contradiction /* from formulas */
next
  case case_4
  by contradiction /* from formulas */
qed













































rule (modulo E) Init[color=#ffffff, process="!"]:
   [ ] --[ Init( ) ]-> [ !Semistate_1( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) p_1_[color=#ffffff, process="!"]:
   [ !Semistate_1( ), Fr( ~Spriv_i.1 ) ]
  -->
   [ !Semistate_1111( ~Spriv_i.1 ), Out( 'g'^~Spriv_i.1 ) ]

  /*
  rule (modulo AC) p_1_[color=#ffffff, process="!"]:
     [ !Semistate_1( ), Fr( ~Spriv_i ) ]
    -->
     [ !Semistate_1111( ~Spriv_i ), Out( 'g'^~Spriv_i ) ]
  */

rule (modulo E) p_1_1111111[color=#ffffff, process="!"]:
   [ !Semistate_11111111( ~Spriv_i.1, ~Spriv_r.1 ), In( x.2 ) ]
  --[ ChannelIn( x.2 ) ]->
   [ Let_1111111111( x.2, ~Spriv_i.1, ~Spriv_r.1 ) ]

  /*
  rule (modulo AC) p_1_1111111[color=#ffffff, process="!"]:
     [ !Semistate_11111111( ~Spriv_i, ~Spriv_r ), In( x ) ]
    --[ ChannelIn( x ) ]->
     [ Let_1111111111( x, ~Spriv_i, ~Spriv_r ) ]
  */

rule (modulo E) ina_1_111111111[color=#408056, process="in(88_a.1);"]:
   [ Let_1111111111( 88_a.1, ~Spriv_i.1, ~Spriv_r.1 ) ]
  -->
   [ State_1111111111( ~Spriv_i.1, ~Spriv_r.1, 88_a.1 ) ]

  /*
  rule (modulo AC) ina_1_111111111[color=#408056, process="in(88_a.1);"]:
     [ Let_1111111111( 88_a, ~Spriv_i, ~Spriv_r ) ]
    -->
     [ State_1111111111( ~Spriv_i, ~Spriv_r, 88_a ) ]
  */

rule (modulo E) newsidi_0_1111111111[color=#408056,
                                     process="new ~92_sid_i.1;"]:
   [
   State_1111111111( ~Spriv_i.1, ~Spriv_r.1, 88_a.1 ), Fr( ~92_sid_i.1 ),
   Fr( ~100_Epriv_i.1 )
   ]
  -->
   [
   Let_1111111111111( <
                       kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
                            DH(~100_Epriv_i.1, 88_a.1)), 
                       '32'>,
                      ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) newsidi_0_1111111111[color=#408056,
                                        process="new ~92_sid_i.1;"]:
     [
     State_1111111111( ~Spriv_i, ~Spriv_r, 88_a ), Fr( ~92_sid_i ),
     Fr( ~100_Epriv_i )
     ]
    -->
     [
     Let_1111111111111( <
                         kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i),
                              DH(~100_Epriv_i, 88_a)), 
                         '32'>,
                        ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfhashConstructiongEpriviDHEprivia_1_111111111111[color=#ffffff,
                                                                                 process="let 68_Pars1.1=pars12(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
   [
   Let_1111111111111( <<68_Pars1.1, x_2>, c_32>, ~100_Epriv_i.1,
                      ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 88_a.1
   )
   ]
  -->
   [
   State_1111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1,
                        68_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfhashConstructiongEpriviDHEprivia_1_111111111111[color=#ffffff,
                                                                                    process="let 68_Pars1.1=pars12(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
     [
     Let_1111111111111( <<68_Pars1, x_2>, c_32>, ~100_Epriv_i, ~92_sid_i,
                        ~Spriv_i, ~Spriv_r, 88_a
     )
     ]
    -->
     [
     State_1111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                          68_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfhashConstructiongEpriviDHEprivia_0_1111111111111[color=#ffffff,
                                                                                  process="let 69_Pars2.1=pars22(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
   [
   State_1111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1,
                        68_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   Let_11111111111111( <
                        kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
                             DH(~100_Epriv_i.1, 88_a.1)), 
                        '32'>,
                       ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 68_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfhashConstructiongEpriviDHEprivia_0_1111111111111[color=#ffffff,
                                                                                     process="let 69_Pars2.1=pars22(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
     [
     State_1111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                          68_Pars1, 88_a
     )
     ]
    -->
     [
     Let_11111111111111( <
                          kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i),
                               DH(~100_Epriv_i, 88_a)), 
                          '32'>,
                         ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 68_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfhashConstructiongEpriviDHEprivia_1_1111111111111[color=#ffffff,
                                                                                  process="let 69_Pars2.1=pars22(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
   [
   Let_11111111111111( <<x_1, 69_Pars2.1>, c_32>, ~100_Epriv_i.1,
                       ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 68_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                         ~Spriv_r.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfhashConstructiongEpriviDHEprivia_1_1111111111111[color=#ffffff,
                                                                                     process="let 69_Pars2.1=pars22(kdf2(kdf1(hash1('Construction'), 'g'^~100_Epriv_i.1),
            DH(~100_Epriv_i.1, 88_a.1)),
       '32')"]:
     [
     Let_11111111111111( <<x_1, 69_Pars2>, c_32>, ~100_Epriv_i, ~92_sid_i,
                         ~Spriv_i, ~Spriv_r, 68_Pars1, 88_a
     )
     ]
    -->
     [
     State_11111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                           68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSprivia_0_11111111111111[color=#ffffff,
                                                             process="let 239_Pars1.1=pars12(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
   [
   State_11111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                         ~Spriv_r.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_111111111111111( <kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32'>,
                        ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 68_Pars1.1,
                        69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSprivia_0_11111111111111[color=#ffffff,
                                                                process="let 239_Pars1.1=pars12(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
     [
     State_11111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                           68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     Let_111111111111111( <kdf2(68_Pars1, DH(~Spriv_i, 88_a)), '32'>,
                          ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSprivia_1_11111111111111[color=#ffffff,
                                                             process="let 239_Pars1.1=pars12(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
   [
   Let_111111111111111( <<239_Pars1.1, x_2>, c_32>, ~100_Epriv_i.1,
                        ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                          ~Spriv_r.1, 239_Pars1.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSprivia_1_11111111111111[color=#ffffff,
                                                                process="let 239_Pars1.1=pars12(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
     [
     Let_111111111111111( <<239_Pars1, x_2>, c_32>, ~100_Epriv_i, ~92_sid_i,
                          ~Spriv_i, ~Spriv_r, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                            239_Pars1, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSprivia_0_111111111111111[color=#ffffff,
                                                              process="let 240_Pars2.1=pars22(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
   [
   State_111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                          ~Spriv_r.1, 239_Pars1.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_1111111111111111( <kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32'>,
                         ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                         68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSprivia_0_111111111111111[color=#ffffff,
                                                                 process="let 240_Pars2.1=pars22(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
     [
     State_111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                            239_Pars1, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     Let_1111111111111111( <kdf2(68_Pars1, DH(~Spriv_i, 88_a)), '32'>,
                           ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 68_Pars1,
                           69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSprivia_1_111111111111111[color=#ffffff,
                                                              process="let 240_Pars2.1=pars22(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
   [
   Let_1111111111111111( <<x_1, 240_Pars2.1>, c_32>, ~100_Epriv_i.1,
                         ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 68_Pars1.1, 69_Pars2.1,
                         88_a.1
   )
   ]
  -->
   [
   State_1111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                           ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSprivia_1_111111111111111[color=#ffffff,
                                                                 process="let 240_Pars2.1=pars22(kdf2(68_Pars1.1, DH(~Spriv_i.1, 88_a.1)), '32')"]:
     [
     Let_1111111111111111( <<x_1, 240_Pars2>, c_32>, ~100_Epriv_i, ~92_sid_i,
                           ~Spriv_i, ~Spriv_r, 239_Pars1, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_1111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                             239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) outtriplegEpriviAEADParsgSprivihashhashhashhashConstructionsidiagEpriviAEADParstsihashhashhashhashhashConstructionsidiagEpriviAEADParsgSprivihashhashhashhashConstructionsidiagEprivi_0_1111111111111111[color=#408056,
                                                                                                                                                                                                                         process="out(triple('g'^~100_Epriv_i.1,
       AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
            hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                  'g'^~100_Epriv_i.1)),
       AEAD(240_Pars2.1, 'ts_i',
            hash2(hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1),
                              88_a.1),
                        'g'^~100_Epriv_i.1),
                  AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
                       hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                             'g'^~100_Epriv_i.1))))));"]:
   [
   State_1111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                           ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                            ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   ),
   Out( triple('g'^~100_Epriv_i.1,
               AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
                    hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                          'g'^~100_Epriv_i.1)),
               AEAD(240_Pars2.1, 'ts_i',
                    hash2(hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                                'g'^~100_Epriv_i.1),
                          AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
                               hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                                     'g'^~100_Epriv_i.1)))))
   )
   ]

  /*
  rule (modulo AC) outtriplegEpriviAEADParsgSprivihashhashhashhashConstructionsidiagEpriviAEADParstsihashhashhashhashhashConstructionsidiagEpriviAEADParsgSprivihashhashhashhashConstructionsidiagEprivi_0_1111111111111111[color=#408056,
                                                                                                                                                                                                                            process="out(triple('g'^~100_Epriv_i.1,
       AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
            hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                  'g'^~100_Epriv_i.1)),
       AEAD(240_Pars2.1, 'ts_i',
            hash2(hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1),
                              88_a.1),
                        'g'^~100_Epriv_i.1),
                  AEAD(69_Pars2.1, 'g'^~Spriv_i.1,
                       hash2(hash2(hash2(hash1('Construction'), ~92_sid_i.1), 88_a.1),
                             'g'^~100_Epriv_i.1))))));"]:
     [
     State_1111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                             239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_11111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                              239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     ),
     Out( triple('g'^~100_Epriv_i,
                 AEAD(69_Pars2, 'g'^~Spriv_i,
                      hash2(hash2(hash2(hash1('Construction'), ~92_sid_i), 88_a),
                            'g'^~100_Epriv_i)),
                 AEAD(240_Pars2, 'ts_i',
                      hash2(hash2(hash2(hash2(hash1('Construction'), ~92_sid_i), 88_a),
                                  'g'^~100_Epriv_i),
                            AEAD(69_Pars2, 'g'^~Spriv_i,
                                 hash2(hash2(hash2(hash1('Construction'), ~92_sid_i), 88_a),
                                       'g'^~100_Epriv_i)))))
     )
     ]
  */

rule (modulo E) eventInitStartInitRespgSprivigSprivrSprivi_0_11111111111111111[color=#408056,
                                                                               process="event InitStart( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
           ~Spriv_i.1
);"]:
   [
   State_11111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                            ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  --[
  InitStart( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1, ~Spriv_i.1 ),
  Event( )
  ]->
   [
   State_111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                             ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) eventInitStartInitRespgSprivigSprivrSprivi_0_11111111111111111[color=#408056,
                                                                                  process="event InitStart( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
           ~Spriv_i.1
);"]:
     [
     State_11111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                              239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    --[
    InitStart( 'Init', 'Resp', 'g'^~Spriv_i, 'g'^~Spriv_r, ~Spriv_i ),
    Event( )
    ]->
     [
     State_111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                               239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) ina_0_111111111111111111[color=#408056,
                                         process="in(253_a.1);"]:
   [
   State_111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                             ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   ),
   In( x.2 )
   ]
  --[ ChannelIn( x.2 ) ]->
   [
   Let_1111111111111111111( x.2, ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                            ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) ina_0_111111111111111111[color=#408056,
                                            process="in(253_a.1);"]:
     [
     State_111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                               239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     ),
     In( x )
     ]
    --[ ChannelIn( x ) ]->
     [
     Let_1111111111111111111( x, ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                              239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) ina_1_111111111111111111[color=#408056,
                                         process="in(253_a.1);"]:
   [
   Let_1111111111111111111( 253_a.1, ~100_Epriv_i.1, ~92_sid_i.1,
                            ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                            88_a.1
   )
   ]
  -->
   [
   State_1111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                              ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 68_Pars1.1, 69_Pars2.1,
                              88_a.1
   )
   ]

  /*
  rule (modulo AC) ina_1_111111111111111111[color=#408056,
                                            process="in(253_a.1);"]:
     [
     Let_1111111111111111111( 253_a, ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                              ~Spriv_r, 239_Pars1, 240_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_1111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                239_Pars1, 240_Pars2, 253_a, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparsa_0_1111111111111111111[color=#ffffff,
                                                   process="let 254_Pars1.1=pars12(253_a.1, '32')"]:
   [
   State_1111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                              ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 68_Pars1.1, 69_Pars2.1,
                              88_a.1
   )
   ]
  -->
   [
   Let_11111111111111111111( <253_a.1, '32'>, ~100_Epriv_i.1, ~92_sid_i.1,
                             ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 68_Pars1.1,
                             69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_0_1111111111111111111[color=#ffffff,
                                                      process="let 254_Pars1.1=pars12(253_a.1, '32')"]:
     [
     State_1111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                239_Pars1, 240_Pars2, 253_a, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     Let_11111111111111111111( <253_a, '32'>, ~100_Epriv_i, ~92_sid_i,
                               ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparsa_1_1111111111111111111[color=#ffffff,
                                                   process="let 254_Pars1.1=pars12(253_a.1, '32')"]:
   [
   Let_11111111111111111111( <<254_Pars1.1, x_2>, c_32>, ~100_Epriv_i.1,
                             ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                             68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                               ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 68_Pars1.1,
                               69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_1_1111111111111111111[color=#ffffff,
                                                      process="let 254_Pars1.1=pars12(253_a.1, '32')"]:
     [
     Let_11111111111111111111( <<254_Pars1, x_2>, c_32>, ~100_Epriv_i,
                               ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 68_Pars1,
                               69_Pars2, 88_a
     )
     ]
    -->
     [
     State_11111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparsa_0_11111111111111111111[color=#ffffff,
                                                    process="let 258_Pars2.1=pars22(253_a.1, '32')"]:
   [
   State_11111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                               ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 68_Pars1.1,
                               69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_111111111111111111111( <253_a.1, '32'>, ~100_Epriv_i.1, ~92_sid_i.1,
                              ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1,
                              68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_0_11111111111111111111[color=#ffffff,
                                                       process="let 258_Pars2.1=pars22(253_a.1, '32')"]:
     [
     State_11111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     Let_111111111111111111111( <253_a, '32'>, ~100_Epriv_i, ~92_sid_i,
                                ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 68_Pars1,
                                69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparsa_1_11111111111111111111[color=#ffffff,
                                                    process="let 258_Pars2.1=pars22(253_a.1, '32')"]:
   [
   Let_111111111111111111111( <<x_1, 258_Pars2.1>, c_32>, ~100_Epriv_i.1,
                              ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                              254_Pars1.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_1_11111111111111111111[color=#ffffff,
                                                       process="let 258_Pars2.1=pars22(253_a.1, '32')"]:
     [
     Let_111111111111111111111( <<x_1, 258_Pars2>, c_32>, ~100_Epriv_i,
                                ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                  239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                  88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfParsParsDHEpriviPars_0_111111111111111111111[color=#ffffff,
                                                                              process="let 742_Pars1.1=pars12(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
   [
   State_111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_1111111111111111111111( <
                                kdf2(kdf1(239_Pars1.1, 254_Pars1.1), DH(~100_Epriv_i.1, 254_Pars1.1)), 
                                '32'>,
                               ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                               240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                               88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfParsParsDHEpriviPars_0_111111111111111111111[color=#ffffff,
                                                                                 process="let 742_Pars1.1=pars12(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
     [
     State_111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r,
                                  239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                  88_a
     )
     ]
    -->
     [
     Let_1111111111111111111111( <
                                  kdf2(kdf1(239_Pars1, 254_Pars1), DH(~100_Epriv_i, 254_Pars1)), '32'>,
                                 ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfParsParsDHEpriviPars_1_111111111111111111111[color=#ffffff,
                                                                              process="let 742_Pars1.1=pars12(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
   [
   Let_1111111111111111111111( <<742_Pars1.1, x_2>, c_32>, ~100_Epriv_i.1,
                               ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                               254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_1111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                 ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                 68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfParsParsDHEpriviPars_1_111111111111111111111[color=#ffffff,
                                                                                 process="let 742_Pars1.1=pars12(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
     [
     Let_1111111111111111111111( <<742_Pars1, x_2>, c_32>, ~100_Epriv_i,
                                 ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                 258_Pars2, 68_Pars1, 69_Pars2, 88_a
     )
     ]
    -->
     [
     State_1111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                   ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                   69_Pars2, 742_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfParsParsDHEpriviPars_0_1111111111111111111111[color=#ffffff,
                                                                               process="let 743_Pars2.1=pars22(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
   [
   State_1111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                 ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                 68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   Let_11111111111111111111111( <
                                 kdf2(kdf1(239_Pars1.1, 254_Pars1.1), DH(~100_Epriv_i.1, 254_Pars1.1)), 
                                 '32'>,
                                ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                742_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfParsParsDHEpriviPars_0_1111111111111111111111[color=#ffffff,
                                                                                  process="let 743_Pars2.1=pars22(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
     [
     State_1111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                   ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                   69_Pars2, 742_Pars1, 88_a
     )
     ]
    -->
     [
     Let_11111111111111111111111( <
                                   kdf2(kdf1(239_Pars1, 254_Pars1), DH(~100_Epriv_i, 254_Pars1)), '32'>,
                                  ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                  254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfkdfParsParsDHEpriviPars_1_1111111111111111111111[color=#ffffff,
                                                                               process="let 743_Pars2.1=pars22(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
   [
   Let_11111111111111111111111( <<x_1, 743_Pars2.1>, c_32>, ~100_Epriv_i.1,
                                ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                  ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                  68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfParsParsDHEpriviPars_1_1111111111111111111111[color=#ffffff,
                                                                                  process="let 743_Pars2.1=pars22(kdf2(kdf1(239_Pars1.1, 254_Pars1.1),
            DH(~100_Epriv_i.1, 254_Pars1.1)),
       '32')"]:
     [
     Let_11111111111111111111111( <<x_1, 743_Pars2>, c_32>, ~100_Epriv_i,
                                  ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                  258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 88_a
     )
     ]
    -->
     [
     State_11111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                    ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                    69_Pars2, 742_Pars1, 743_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSpriviPars_0_11111111111111111111111[color=#ffffff,
                                                                         process="let 879_Pars1.1=pars12(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
   [
   State_11111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                  ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                  68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_111111111111111111111111( <
                                  kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32'>,
                                 ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                 742_Pars1.1, 743_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSpriviPars_0_11111111111111111111111[color=#ffffff,
                                                                            process="let 879_Pars1.1=pars12(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
     [
     State_11111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                    ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                    69_Pars2, 742_Pars1, 743_Pars2, 88_a
     )
     ]
    -->
     [
     Let_111111111111111111111111( <kdf2(742_Pars1, DH(~Spriv_i, 254_Pars1)), 
                                    '32'>,
                                   ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                   254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSpriviPars_1_11111111111111111111111[color=#ffffff,
                                                                         process="let 879_Pars1.1=pars12(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
   [
   Let_111111111111111111111111( <<879_Pars1.1, x_2>, c_32>, ~100_Epriv_i.1,
                                 ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1,
                                 743_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                   ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                   68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSpriviPars_1_11111111111111111111111[color=#ffffff,
                                                                            process="let 879_Pars1.1=pars12(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
     [
     Let_111111111111111111111111( <<879_Pars1, x_2>, c_32>, ~100_Epriv_i,
                                   ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                   258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 88_a
     )
     ]
    -->
     [
     State_111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                     ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                     69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSpriviPars_0_111111111111111111111111[color=#ffffff,
                                                                          process="let 880_Pars2.1=pars22(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
   [
   State_111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                   ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                   68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   Let_1111111111111111111111111( <
                                   kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32'>,
                                  ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                  240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                  742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSpriviPars_0_111111111111111111111111[color=#ffffff,
                                                                             process="let 880_Pars2.1=pars22(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
     [
     State_111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                     ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                     69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 88_a
     )
     ]
    -->
     [
     Let_1111111111111111111111111( <
                                     kdf2(742_Pars1, DH(~Spriv_i, 254_Pars1)), '32'>,
                                    ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                    254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                    879_Pars1, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsDHSpriviPars_1_111111111111111111111111[color=#ffffff,
                                                                          process="let 880_Pars2.1=pars22(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
   [
   Let_1111111111111111111111111( <<x_1, 880_Pars2.1>, c_32>,
                                  ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                  240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                  742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 88_a.1
   )
   ]
  -->
   [
   State_1111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                    ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                    68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                    880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsDHSpriviPars_1_111111111111111111111111[color=#ffffff,
                                                                             process="let 880_Pars2.1=pars22(kdf2(742_Pars1.1, DH(~Spriv_i.1, 254_Pars1.1)), '32')"]:
     [
     Let_1111111111111111111111111( <<x_1, 880_Pars2>, c_32>, ~100_Epriv_i,
                                    ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1,
                                    258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 88_a
     )
     ]
    -->
     [
     State_1111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                      ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                      69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_0_1111111111111111111111111[color=#ffffff,
                                                                process="let 015_Pars1.1=pars13(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   State_1111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1,
                                    ~Spriv_r.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                    68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                    880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_11111111111111111111111111( <kdf3(879_Pars1.1, 'Q'), '32'>,
                                   ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                   240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                   742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_0_1111111111111111111111111[color=#ffffff,
                                                                   process="let 015_Pars1.1=pars13(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     State_1111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                      ~Spriv_r, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1,
                                      69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     Let_11111111111111111111111111( <kdf3(879_Pars1, 'Q'), '32'>,
                                     ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                     254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                     879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_1_1111111111111111111111111[color=#ffffff,
                                                                process="let 015_Pars1.1=pars13(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   Let_11111111111111111111111111( <triple(015_Pars1.1, x_2, x_3), c_32>,
                                   ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 239_Pars1.1,
                                   240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                   742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                     ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                     254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1,
                                     743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_1_1111111111111111111111111[color=#ffffff,
                                                                   process="let 015_Pars1.1=pars13(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     Let_11111111111111111111111111( <triple(015_Pars1, x_2, x_3), c_32>,
                                     ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 239_Pars1, 240_Pars2, 253_a,
                                     254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                     879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     State_11111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                       ~Spriv_r, 015_Pars1, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2,
                                       68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_0_11111111111111111111111111[color=#ffffff,
                                                                 process="let 016_Pars2.1=pars23(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   State_11111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                     ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                     254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1,
                                     743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_111111111111111111111111111( <kdf3(879_Pars1.1, 'Q'), '32'>,
                                    ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                    239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1,
                                    69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_0_11111111111111111111111111[color=#ffffff,
                                                                    process="let 016_Pars2.1=pars23(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     State_11111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                       ~Spriv_r, 015_Pars1, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2,
                                       68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     Let_111111111111111111111111111( <kdf3(879_Pars1, 'Q'), '32'>,
                                      ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 239_Pars1,
                                      240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1,
                                      743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_1_11111111111111111111111111[color=#ffffff,
                                                                 process="let 016_Pars2.1=pars23(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   Let_111111111111111111111111111( <triple(x_1, 016_Pars2.1, x_3), c_32>,
                                    ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                    239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1,
                                    69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                      ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 239_Pars1.1,
                                      240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                      742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_1_11111111111111111111111111[color=#ffffff,
                                                                    process="let 016_Pars2.1=pars23(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     Let_111111111111111111111111111( <triple(x_1, 016_Pars2, x_3), c_32>,
                                      ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 239_Pars1,
                                      240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1,
                                      743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     State_111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                        ~Spriv_r, 015_Pars1, 016_Pars2, 239_Pars1, 240_Pars2, 253_a,
                                        254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                        879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_0_111111111111111111111111111[color=#ffffff,
                                                                  process="let 2022_Pars3.1=pars33(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   State_111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                      ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 239_Pars1.1,
                                      240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1,
                                      742_Pars1.1, 743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_1111111111111111111111111111( <kdf3(879_Pars1.1, 'Q'), '32'>,
                                     ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                     016_Pars2.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                     68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                     880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_0_111111111111111111111111111[color=#ffffff,
                                                                     process="let 2022_Pars3.1=pars33(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     State_111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                        ~Spriv_r, 015_Pars1, 016_Pars2, 239_Pars1, 240_Pars2, 253_a,
                                        254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2,
                                        879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     Let_1111111111111111111111111111( <kdf3(879_Pars1, 'Q'), '32'>,
                                       ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 016_Pars2,
                                       239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                       742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letParsparskdfParsQ_1_111111111111111111111111111[color=#ffffff,
                                                                  process="let 2022_Pars3.1=pars33(kdf3(879_Pars1.1, 'Q'), '32')"]:
   [
   Let_1111111111111111111111111111( <triple(x_1, x_2, 2022_Pars3.1), c_32>,
                                     ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                     016_Pars2.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                     68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                     880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_1111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                       ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 2022_Pars3.1,
                                       239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                       68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                       880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfParsQ_1_111111111111111111111111111[color=#ffffff,
                                                                     process="let 2022_Pars3.1=pars33(kdf3(879_Pars1.1, 'Q'), '32')"]:
     [
     Let_1111111111111111111111111111( <triple(x_1, x_2, 2022_Pars3), c_32>,
                                       ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 016_Pars2,
                                       239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                       742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     State_1111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                         ~Spriv_r, 015_Pars1, 016_Pars2, 2022_Pars3, 239_Pars1, 240_Pars2,
                                         253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1,
                                         743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letDecdecParsPars_0_1111111111111111111111111111[color=#ffffff,
                                                                 process="let 029_Dec.1=dec(258_Pars2.1, 2022_Pars3.1)"]:
   [
   State_1111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                       ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 2022_Pars3.1,
                                       239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1, 258_Pars2.1,
                                       68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1, 879_Pars1.1,
                                       880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   Let_11111111111111111111111111111( <258_Pars2.1, 2022_Pars3.1>,
                                      ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                      016_Pars2.1, 2022_Pars3.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                      254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1,
                                      743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParsPars_0_1111111111111111111111111111[color=#ffffff,
                                                                    process="let 029_Dec.1=dec(258_Pars2.1, 2022_Pars3.1)"]:
     [
     State_1111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                         ~Spriv_r, 015_Pars1, 016_Pars2, 2022_Pars3, 239_Pars1, 240_Pars2,
                                         253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2, 742_Pars1,
                                         743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     Let_11111111111111111111111111111( <258_Pars2, 2022_Pars3>, ~100_Epriv_i,
                                        ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 016_Pars2, 2022_Pars3,
                                        239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                        742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) letDecdecParsPars_1_1111111111111111111111111111[color=#ffffff,
                                                                 process="let 029_Dec.1=dec(258_Pars2.1, 2022_Pars3.1)"]:
   [
   Let_11111111111111111111111111111( <AEAD(k, 029_Dec.1, a), k>,
                                      ~100_Epriv_i.1, ~92_sid_i.1, ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1,
                                      016_Pars2.1, 2022_Pars3.1, 239_Pars1.1, 240_Pars2.1, 253_a.1,
                                      254_Pars1.1, 258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1,
                                      743_Pars2.1, 879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  -->
   [
   State_11111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                        ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 029_Dec.1,
                                        2022_Pars3.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1,
                                        258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1,
                                        879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParsPars_1_1111111111111111111111111111[color=#ffffff,
                                                                    process="let 029_Dec.1=dec(258_Pars2.1, 2022_Pars3.1)"]:
     [
     Let_11111111111111111111111111111( <AEAD(k, 029_Dec, a), k>,
                                        ~100_Epriv_i, ~92_sid_i, ~Spriv_i, ~Spriv_r, 015_Pars1, 016_Pars2,
                                        2022_Pars3, 239_Pars1, 240_Pars2, 253_a, 254_Pars1, 258_Pars2,
                                        68_Pars1, 69_Pars2, 742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    -->
     [
     State_11111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                          ~Spriv_r, 015_Pars1, 016_Pars2, 029_Dec, 2022_Pars3, 239_Pars1,
                                          240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                          742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
  */

rule (modulo E) eventInitAcceptInitRespgSprivigSprivrSprivi_0_11111111111111111111111111111[color=#408056,
                                                                                            process="event InitAccept( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
            ~Spriv_i.1
);"]:
   [
   State_11111111111111111111111111111( ~100_Epriv_i.1, ~92_sid_i.1,
                                        ~Spriv_i.1, ~Spriv_r.1, 015_Pars1.1, 016_Pars2.1, 029_Dec.1,
                                        2022_Pars3.1, 239_Pars1.1, 240_Pars2.1, 253_a.1, 254_Pars1.1,
                                        258_Pars2.1, 68_Pars1.1, 69_Pars2.1, 742_Pars1.1, 743_Pars2.1,
                                        879_Pars1.1, 880_Pars2.1, 88_a.1
   )
   ]
  --[
  InitAccept( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1, ~Spriv_i.1 ),
  Event( )
  ]->
   [ ]

  /*
  rule (modulo AC) eventInitAcceptInitRespgSprivigSprivrSprivi_0_11111111111111111111111111111[color=#408056,
                                                                                               process="event InitAccept( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
            ~Spriv_i.1
);"]:
     [
     State_11111111111111111111111111111( ~100_Epriv_i, ~92_sid_i, ~Spriv_i,
                                          ~Spriv_r, 015_Pars1, 016_Pars2, 029_Dec, 2022_Pars3, 239_Pars1,
                                          240_Pars2, 253_a, 254_Pars1, 258_Pars2, 68_Pars1, 69_Pars2,
                                          742_Pars1, 743_Pars2, 879_Pars1, 880_Pars2, 88_a
     )
     ]
    --[
    InitAccept( 'Init', 'Resp', 'g'^~Spriv_i, 'g'^~Spriv_r, ~Spriv_i ),
    Event( )
    ]->
     [ ]
  */

rule (modulo E) p_1_111[color=#ffffff, process="!"]:
   [ !Semistate_1111( ~Spriv_i.1 ), Fr( ~Spriv_r.1 ) ]
  -->
   [
   !Semistate_11111121( ~Spriv_i.1, ~Spriv_r.1 ),
   !Semistate_11111111( ~Spriv_i.1, ~Spriv_r.1 ), Out( 'g'^~Spriv_r.1 )
   ]

  /*
  rule (modulo AC) p_1_111[color=#ffffff, process="!"]:
     [ !Semistate_1111( ~Spriv_i ), Fr( ~Spriv_r ) ]
    -->
     [
     !Semistate_11111121( ~Spriv_i, ~Spriv_r ),
     !Semistate_11111111( ~Spriv_i, ~Spriv_r ), Out( 'g'^~Spriv_r )
     ]
  */

rule (modulo E) p_1_1111112[color=#ffffff, process="!"]:
   [ !Semistate_11111121( ~Spriv_i.1, ~Spriv_r.1 ), In( x.2 ) ]
  --[ ChannelIn( x.2 ) ]->
   [ Let_1111112111( x.2, ~Spriv_i.1, ~Spriv_r.1 ) ]

  /*
  rule (modulo AC) p_1_1111112[color=#ffffff, process="!"]:
     [ !Semistate_11111121( ~Spriv_i, ~Spriv_r ), In( x ) ]
    --[ ChannelIn( x ) ]->
     [ Let_1111112111( x, ~Spriv_i, ~Spriv_r ) ]
  */

rule (modulo E) ina_1_111111211[color=#408046, process="in(42_a.1);"]:
   [ Let_1111112111( 42_a.1, ~Spriv_i.1, ~Spriv_r.1 ) ]
  -->
   [ State_1111112111( ~Spriv_i.1, ~Spriv_r.1, 42_a.1 ) ]

  /*
  rule (modulo AC) ina_1_111111211[color=#408046, process="in(42_a.1);"]:
     [ Let_1111112111( 42_a, ~Spriv_i, ~Spriv_r ) ]
    -->
     [ State_1111112111( ~Spriv_i, ~Spriv_r, 42_a ) ]
  */

rule (modulo E) newsidr_0_1111112111[color=#408046,
                                     process="new ~46_sid_r.1;"]:
   [
   State_1111112111( ~Spriv_i.1, ~Spriv_r.1, 42_a.1 ), Fr( ~46_sid_r.1 ),
   In( x.2 )
   ]
  --[ ChannelIn( x.2 ) ]->
   [ Let_111111211111( x.2, ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1 ) ]

  /*
  rule (modulo AC) newsidr_0_1111112111[color=#408046,
                                        process="new ~46_sid_r.1;"]:
     [ State_1111112111( ~Spriv_i, ~Spriv_r, 42_a ), Fr( ~46_sid_r ), In( x )
     ]
    --[ ChannelIn( x ) ]->
     [ Let_111111211111( x, ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a ) ]
  */

rule (modulo E) ina_1_11111121111[color=#408046, process="in(55_a.1);"]:
   [ Let_111111211111( 55_a.1, ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1 )
   ]
  -->
   [
   State_111111211111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1 )
   ]

  /*
  rule (modulo AC) ina_1_11111121111[color=#408046, process="in(55_a.1);"]:
     [ Let_111111211111( 55_a, ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a ) ]
    -->
     [ State_111111211111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a ) ]
  */

rule (modulo E) letParsparsa_0_111111211111[color=#ffffff,
                                            process="let 56_Pars1.1=pars13(55_a.1, '32')"]:
   [
   State_111111211111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1 )
   ]
  -->
   [
   Let_1111112111111( <55_a.1, '32'>, ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1,
                      42_a.1, 55_a.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_0_111111211111[color=#ffffff,
                                               process="let 56_Pars1.1=pars13(55_a.1, '32')"]:
     [ State_111111211111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a ) ]
    -->
     [
     Let_1111112111111( <55_a, '32'>, ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a,
                        55_a
     )
     ]
  */

rule (modulo E) letParsparsa_1_111111211111[color=#ffffff,
                                            process="let 56_Pars1.1=pars13(55_a.1, '32')"]:
   [
   Let_1111112111111( <triple(56_Pars1.1, x_2, x_3), c_32>, ~46_sid_r.1,
                      ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1
   )
   ]
  -->
   [
   State_1111112111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1,
                        56_Pars1.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_1_111111211111[color=#ffffff,
                                               process="let 56_Pars1.1=pars13(55_a.1, '32')"]:
     [
     Let_1111112111111( <triple(56_Pars1, x_2, x_3), c_32>, ~46_sid_r,
                        ~Spriv_i, ~Spriv_r, 42_a, 55_a
     )
     ]
    -->
     [
     State_1111112111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a, 56_Pars1
     )
     ]
  */

rule (modulo E) letParsparsa_0_1111112111111[color=#ffffff,
                                             process="let 60_Pars2.1=pars23(55_a.1, '32')"]:
   [
   State_1111112111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1,
                        56_Pars1.1
   )
   ]
  -->
   [
   Let_11111121111111( <55_a.1, '32'>, ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1,
                       42_a.1, 55_a.1, 56_Pars1.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_0_1111112111111[color=#ffffff,
                                                process="let 60_Pars2.1=pars23(55_a.1, '32')"]:
     [
     State_1111112111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a, 56_Pars1
     )
     ]
    -->
     [
     Let_11111121111111( <55_a, '32'>, ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a,
                         55_a, 56_Pars1
     )
     ]
  */

rule (modulo E) letParsparsa_1_1111112111111[color=#ffffff,
                                             process="let 60_Pars2.1=pars23(55_a.1, '32')"]:
   [
   Let_11111121111111( <triple(x_1, 60_Pars2.1, x_3), c_32>, ~46_sid_r.1,
                       ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1, 56_Pars1.1
   )
   ]
  -->
   [
   State_11111121111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1,
                         55_a.1, 56_Pars1.1, 60_Pars2.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_1_1111112111111[color=#ffffff,
                                                process="let 60_Pars2.1=pars23(55_a.1, '32')"]:
     [
     Let_11111121111111( <triple(x_1, 60_Pars2, x_3), c_32>, ~46_sid_r,
                         ~Spriv_i, ~Spriv_r, 42_a, 55_a, 56_Pars1
     )
     ]
    -->
     [
     State_11111121111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a,
                           56_Pars1, 60_Pars2
     )
     ]
  */

rule (modulo E) letParsparsa_0_11111121111111[color=#ffffff,
                                              process="let 63_Pars3.1=pars33(55_a.1, '32')"]:
   [
   State_11111121111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1,
                         55_a.1, 56_Pars1.1, 60_Pars2.1
   )
   ]
  -->
   [
   Let_111111211111111( <55_a.1, '32'>, ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1,
                        42_a.1, 55_a.1, 56_Pars1.1, 60_Pars2.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_0_11111121111111[color=#ffffff,
                                                 process="let 63_Pars3.1=pars33(55_a.1, '32')"]:
     [
     State_11111121111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a,
                           56_Pars1, 60_Pars2
     )
     ]
    -->
     [
     Let_111111211111111( <55_a, '32'>, ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a,
                          55_a, 56_Pars1, 60_Pars2
     )
     ]
  */

rule (modulo E) letParsparsa_1_11111121111111[color=#ffffff,
                                              process="let 63_Pars3.1=pars33(55_a.1, '32')"]:
   [
   Let_111111211111111( <triple(x_1, x_2, 63_Pars3.1), c_32>, ~46_sid_r.1,
                        ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1, 56_Pars1.1, 60_Pars2.1
   )
   ]
  -->
   [
   State_111111211111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1,
                          55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letParsparsa_1_11111121111111[color=#ffffff,
                                                 process="let 63_Pars3.1=pars33(55_a.1, '32')"]:
     [
     Let_111111211111111( <triple(x_1, x_2, 63_Pars3), c_32>, ~46_sid_r,
                          ~Spriv_i, ~Spriv_r, 42_a, 55_a, 56_Pars1, 60_Pars2
     )
     ]
    -->
     [
     State_111111211111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a,
                            56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
  */

rule (modulo E) letDecdecParskdfkdfhashConstructionParsDHSprivrPars_0_111111211111111[color=#ffffff,
                                                                                      process="let 302_Dec.1=dec(60_Pars2.1,
    kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
         DH(~Spriv_r.1, 56_Pars1.1)))"]:
   [
   State_111111211111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1,
                          55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]
  -->
   [
   Let_1111112111111111( <60_Pars2.1, 
                          kdf1(kdf1(hash1('Construction'), 56_Pars1.1), DH(~Spriv_r.1, 56_Pars1.1))
                         >,
                         ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1, 56_Pars1.1,
                         60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParskdfkdfhashConstructionParsDHSprivrPars_0_111111211111111[color=#ffffff,
                                                                                         process="let 302_Dec.1=dec(60_Pars2.1,
    kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
         DH(~Spriv_r.1, 56_Pars1.1)))"]:
     [
     State_111111211111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a,
                            56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
    -->
     [
     Let_1111112111111111( <60_Pars2, 
                            kdf1(kdf1(hash1('Construction'), 56_Pars1), DH(~Spriv_r, 56_Pars1))>,
                           ~46_sid_r, ~Spriv_i, ~Spriv_r, 42_a, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
  */

rule (modulo E) letDecdecParskdfkdfhashConstructionParsDHSprivrPars_1_111111211111111[color=#ffffff,
                                                                                      process="let 302_Dec.1=dec(60_Pars2.1,
    kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
         DH(~Spriv_r.1, 56_Pars1.1)))"]:
   [
   Let_1111112111111111( <AEAD(k, 302_Dec.1, a), k>, ~46_sid_r.1,
                         ~Spriv_i.1, ~Spriv_r.1, 42_a.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                         63_Pars3.1
   )
   ]
  -->
   [
   State_1111112111111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1,
                           42_a.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParskdfkdfhashConstructionParsDHSprivrPars_1_111111211111111[color=#ffffff,
                                                                                         process="let 302_Dec.1=dec(60_Pars2.1,
    kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
         DH(~Spriv_r.1, 56_Pars1.1)))"]:
     [
     Let_1111112111111111( <AEAD(k, 302_Dec, a), k>, ~46_sid_r, ~Spriv_i,
                           ~Spriv_r, 42_a, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
    -->
     [
     State_1111112111111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a,
                             55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
  */

rule (modulo E) letDecdecParskdfkdfkdfhashConstructionParsDHSprivrParsDHSprivra_0_1111112111111111[color=#ffffff,
                                                                                                   process="let 555_Dec.1=dec(63_Pars3.1,
    kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
              DH(~Spriv_r.1, 56_Pars1.1)),
         DH(~Spriv_r.1, 42_a.1)))"]:
   [
   State_1111112111111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1,
                           42_a.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]
  -->
   [
   Let_11111121111111111( <63_Pars3.1, 
                           kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
                                     DH(~Spriv_r.1, 56_Pars1.1)),
                                DH(~Spriv_r.1, 42_a.1))
                          >,
                          ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1, 55_a.1,
                          56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParskdfkdfkdfhashConstructionParsDHSprivrParsDHSprivra_0_1111112111111111[color=#ffffff,
                                                                                                      process="let 555_Dec.1=dec(63_Pars3.1,
    kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
              DH(~Spriv_r.1, 56_Pars1.1)),
         DH(~Spriv_r.1, 42_a.1)))"]:
     [
     State_1111112111111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a,
                             55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
    -->
     [
     Let_11111121111111111( <63_Pars3, 
                             kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1), DH(~Spriv_r, 56_Pars1)),
                                  DH(~Spriv_r, 42_a))
                            >,
                            ~46_sid_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 55_a, 56_Pars1, 60_Pars2,
                            63_Pars3
     )
     ]
  */

rule (modulo E) letDecdecParskdfkdfkdfhashConstructionParsDHSprivrParsDHSprivra_1_1111112111111111[color=#ffffff,
                                                                                                   process="let 555_Dec.1=dec(63_Pars3.1,
    kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
              DH(~Spriv_r.1, 56_Pars1.1)),
         DH(~Spriv_r.1, 42_a.1)))"]:
   [
   Let_11111121111111111( <AEAD(k, 555_Dec.1, a), k>, ~46_sid_r.1,
                          ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1, 55_a.1, 56_Pars1.1,
                          60_Pars2.1, 63_Pars3.1
   )
   ]
  -->
   [
   State_11111121111111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1,
                            42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letDecdecParskdfkdfkdfhashConstructionParsDHSprivrParsDHSprivra_1_1111112111111111[color=#ffffff,
                                                                                                      process="let 555_Dec.1=dec(63_Pars3.1,
    kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
              DH(~Spriv_r.1, 56_Pars1.1)),
         DH(~Spriv_r.1, 42_a.1)))"]:
     [
     Let_11111121111111111( <AEAD(k, 555_Dec, a), k>, ~46_sid_r, ~Spriv_i,
                            ~Spriv_r, 302_Dec, 42_a, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
    -->
     [
     State_11111121111111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a,
                              555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
  */

rule (modulo E) eventRespRecvInitRespgSprivigSprivrSprivr_0_11111121111111111[color=#408046,
                                                                              process="event RespRecv( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
          ~Spriv_r.1
);"]:
   [
   State_11111121111111111( ~46_sid_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1,
                            42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   ),
   Fr( ~563_Epriv_r.1 )
   ]
  --[
  RespRecv( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1, ~Spriv_r.1 ),
  Event( )
  ]->
   [
   Let_11111121111111111111( <
                              kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
                                                       DH(~Spriv_r.1, 56_Pars1.1)),
                                                  DH(~Spriv_r.1, 42_a.1)),
                                             'g'^~563_Epriv_r.1),
                                        DH(~563_Epriv_r.1, 56_Pars1.1)),
                                   'Q'), 
                              '32'>,
                             ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                             555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]

  /*
  rule (modulo AC) eventRespRecvInitRespgSprivigSprivrSprivr_0_11111121111111111[color=#408046,
                                                                                 process="event RespRecv( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
          ~Spriv_r.1
);"]:
     [
     State_11111121111111111( ~46_sid_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a,
                              555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3
     ),
     Fr( ~563_Epriv_r )
     ]
    --[
    RespRecv( 'Init', 'Resp', 'g'^~Spriv_i, 'g'^~Spriv_r, ~Spriv_r ),
    Event( )
    ]->
     [
     Let_11111121111111111111( <
                                kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1),
                                                         DH(~Spriv_r, 56_Pars1)),
                                                    DH(~Spriv_r, 42_a)),
                                               'g'^~563_Epriv_r),
                                          DH(~563_Epriv_r, 56_Pars1)),
                                     'Q'), 
                                '32'>,
                               ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec,
                               55_a, 56_Pars1, 60_Pars2, 63_Pars3
     )
     ]
  */

rule (modulo E) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_1111112111111111111[color=#ffffff,
                                                                                                                                 process="let 938_Pars1.1=pars13(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
   [
   Let_11111121111111111111( <triple(938_Pars1.1, x_2, x_3), c_32>,
                             ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                             555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1
   )
   ]
  -->
   [
   State_11111121111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                               ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                               63_Pars3.1, 938_Pars1.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_1111112111111111111[color=#ffffff,
                                                                                                                                    process="let 938_Pars1.1=pars13(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
     [
     Let_11111121111111111111( <triple(938_Pars1, x_2, x_3), c_32>, ~46_sid_r,
                               ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1,
                               60_Pars2, 63_Pars3
     )
     ]
    -->
     [
     State_11111121111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r,
                                 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1
     )
     ]
  */

rule (modulo E) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_0_11111121111111111111[color=#ffffff,
                                                                                                                                  process="let 939_Pars2.1=pars23(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
   [
   State_11111121111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                               ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                               63_Pars3.1, 938_Pars1.1
   )
   ]
  -->
   [
   Let_111111211111111111111( <
                               kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
                                                        DH(~Spriv_r.1, 56_Pars1.1)),
                                                   DH(~Spriv_r.1, 42_a.1)),
                                              'g'^~563_Epriv_r.1),
                                         DH(~563_Epriv_r.1, 56_Pars1.1)),
                                    'Q'), 
                               '32'>,
                              ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                              555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1, 938_Pars1.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_0_11111121111111111111[color=#ffffff,
                                                                                                                                     process="let 939_Pars2.1=pars23(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
     [
     State_11111121111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r,
                                 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1
     )
     ]
    -->
     [
     Let_111111211111111111111( <
                                 kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1),
                                                          DH(~Spriv_r, 56_Pars1)),
                                                     DH(~Spriv_r, 42_a)),
                                                'g'^~563_Epriv_r),
                                           DH(~563_Epriv_r, 56_Pars1)),
                                      'Q'), 
                                 '32'>,
                                ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec,
                                55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1
     )
     ]
  */

rule (modulo E) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_11111121111111111111[color=#ffffff,
                                                                                                                                  process="let 939_Pars2.1=pars23(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
   [
   Let_111111211111111111111( <triple(x_1, 939_Pars2.1, x_3), c_32>,
                              ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                              555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1, 938_Pars1.1
   )
   ]
  -->
   [
   State_111111211111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                63_Pars3.1, 938_Pars1.1, 939_Pars2.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_11111121111111111111[color=#ffffff,
                                                                                                                                     process="let 939_Pars2.1=pars23(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
     [
     Let_111111211111111111111( <triple(x_1, 939_Pars2, x_3), c_32>,
                                ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec,
                                55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1
     )
     ]
    -->
     [
     State_111111211111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r,
                                  302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1,
                                  939_Pars2
     )
     ]
  */

rule (modulo E) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_0_111111211111111111111[color=#ffffff,
                                                                                                                                   process="let 945_Pars3.1=pars33(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
   [
   State_111111211111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                63_Pars3.1, 938_Pars1.1, 939_Pars2.1
   )
   ]
  -->
   [
   Let_1111112111111111111111( <
                                kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1.1),
                                                         DH(~Spriv_r.1, 56_Pars1.1)),
                                                    DH(~Spriv_r.1, 42_a.1)),
                                               'g'^~563_Epriv_r.1),
                                          DH(~563_Epriv_r.1, 56_Pars1.1)),
                                     'Q'), 
                                '32'>,
                               ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                               555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1, 938_Pars1.1,
                               939_Pars2.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_0_111111211111111111111[color=#ffffff,
                                                                                                                                      process="let 945_Pars3.1=pars33(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
     [
     State_111111211111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r,
                                  302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1,
                                  939_Pars2
     )
     ]
    -->
     [
     Let_1111112111111111111111( <
                                  kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'), 56_Pars1),
                                                           DH(~Spriv_r, 56_Pars1)),
                                                      DH(~Spriv_r, 42_a)),
                                                 'g'^~563_Epriv_r),
                                            DH(~563_Epriv_r, 56_Pars1)),
                                       'Q'), 
                                  '32'>,
                                 ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec,
                                 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1, 939_Pars2
     )
     ]
  */

rule (modulo E) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_111111211111111111111[color=#ffffff,
                                                                                                                                   process="let 945_Pars3.1=pars33(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
   [
   Let_1111112111111111111111( <triple(x_1, x_2, 945_Pars3.1), c_32>,
                               ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1, ~Spriv_r.1, 302_Dec.1, 42_a.1,
                               555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1, 63_Pars3.1, 938_Pars1.1,
                               939_Pars2.1
   )
   ]
  -->
   [
   State_1111112111111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                 ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                 63_Pars3.1, 938_Pars1.1, 939_Pars2.1, 945_Pars3.1
   )
   ]

  /*
  rule (modulo AC) letParsparskdfkdfkdfkdfkdfkdfhashConstructionParsDHSprivrParsDHSprivragEprivrDHEprivrParsQ_1_111111211111111111111[color=#ffffff,
                                                                                                                                      process="let 945_Pars3.1=pars33(kdf3(kdf1(kdf1(kdf1(kdf1(kdf1(hash1('Construction'),
                                     56_Pars1.1),
                                DH(~Spriv_r.1, 56_Pars1.1)),
                           DH(~Spriv_r.1, 42_a.1)),
                      'g'^~563_Epriv_r.1),
                 DH(~563_Epriv_r.1, 56_Pars1.1)),
            'Q'),
       '32')"]:
     [
     Let_1111112111111111111111( <triple(x_1, x_2, 945_Pars3), c_32>,
                                 ~46_sid_r, ~563_Epriv_r, ~Spriv_i, ~Spriv_r, 302_Dec, 42_a, 555_Dec,
                                 55_a, 56_Pars1, 60_Pars2, 63_Pars3, 938_Pars1, 939_Pars2
     )
     ]
    -->
     [
     State_1111112111111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i,
                                   ~Spriv_r, 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3,
                                   938_Pars1, 939_Pars2, 945_Pars3
     )
     ]
  */

rule (modulo E) outgEprivrAEADParsepsilonhashhashhashhashhashhashhashhashConstructionsidrgSprivrParsParsParsgEprivrPars_0_1111112111111111111111[color=#408046,
                                                                                                                                                 process="out(<'g'^~563_Epriv_r.1, 
 AEAD(945_Pars3.1, '952_epsilon',
      hash2(hash2(hash2(hash2(hash2(hash2(hash2(hash1('Construction'),
                                                ~46_sid_r.1),
                                          'g'^~Spriv_r.1),
                                    56_Pars1.1),
                              60_Pars2.1),
                        63_Pars3.1),
                  'g'^~563_Epriv_r.1),
            939_Pars2.1))
>);"]:
   [
   State_1111112111111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                 ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                 63_Pars3.1, 938_Pars1.1, 939_Pars2.1, 945_Pars3.1
   )
   ]
  -->
   [
   State_11111121111111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                  ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                  63_Pars3.1, 938_Pars1.1, 939_Pars2.1, 945_Pars3.1
   ),
   Out( <'g'^~563_Epriv_r.1, 
         AEAD(945_Pars3.1, '952_epsilon',
              hash2(hash2(hash2(hash2(hash2(hash2(hash2(hash1('Construction'),
                                                        ~46_sid_r.1),
                                                  'g'^~Spriv_r.1),
                                            56_Pars1.1),
                                      60_Pars2.1),
                                63_Pars3.1),
                          'g'^~563_Epriv_r.1),
                    939_Pars2.1))
        >
   )
   ]

  /*
  rule (modulo AC) outgEprivrAEADParsepsilonhashhashhashhashhashhashhashhashConstructionsidrgSprivrParsParsParsgEprivrPars_0_1111112111111111111111[color=#408046,
                                                                                                                                                    process="out(<'g'^~563_Epriv_r.1, 
 AEAD(945_Pars3.1, '952_epsilon',
      hash2(hash2(hash2(hash2(hash2(hash2(hash2(hash1('Construction'),
                                                ~46_sid_r.1),
                                          'g'^~Spriv_r.1),
                                    56_Pars1.1),
                              60_Pars2.1),
                        63_Pars3.1),
                  'g'^~563_Epriv_r.1),
            939_Pars2.1))
>);"]:
     [
     State_1111112111111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i,
                                   ~Spriv_r, 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3,
                                   938_Pars1, 939_Pars2, 945_Pars3
     )
     ]
    -->
     [
     State_11111121111111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i,
                                    ~Spriv_r, 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3,
                                    938_Pars1, 939_Pars2, 945_Pars3
     ),
     Out( <'g'^~563_Epriv_r, 
           AEAD(945_Pars3, '952_epsilon',
                hash2(hash2(hash2(hash2(hash2(hash2(hash2(hash1('Construction'),
                                                          ~46_sid_r),
                                                    'g'^~Spriv_r),
                                              56_Pars1),
                                        60_Pars2),
                                  63_Pars3),
                            'g'^~563_Epriv_r),
                      939_Pars2))
          >
     )
     ]
  */

rule (modulo E) eventRespAnswInitRespgSprivigSprivrSprivr_0_11111121111111111111111[color=#408046,
                                                                                    process="event RespAnsw( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
          ~Spriv_r.1
);"]:
   [
   State_11111121111111111111111( ~46_sid_r.1, ~563_Epriv_r.1, ~Spriv_i.1,
                                  ~Spriv_r.1, 302_Dec.1, 42_a.1, 555_Dec.1, 55_a.1, 56_Pars1.1, 60_Pars2.1,
                                  63_Pars3.1, 938_Pars1.1, 939_Pars2.1, 945_Pars3.1
   )
   ]
  --[
  RespAnsw( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1, ~Spriv_r.1 ),
  Event( )
  ]->
   [ ]

  /*
  rule (modulo AC) eventRespAnswInitRespgSprivigSprivrSprivr_0_11111121111111111111111[color=#408046,
                                                                                       process="event RespAnsw( 'Init', 'Resp', 'g'^~Spriv_i.1, 'g'^~Spriv_r.1,
          ~Spriv_r.1
);"]:
     [
     State_11111121111111111111111( ~46_sid_r, ~563_Epriv_r, ~Spriv_i,
                                    ~Spriv_r, 302_Dec, 42_a, 555_Dec, 55_a, 56_Pars1, 60_Pars2, 63_Pars3,
                                    938_Pars1, 939_Pars2, 945_Pars3
     )
     ]
    --[
    RespAnsw( 'Init', 'Resp', 'g'^~Spriv_i, 'g'^~Spriv_r, ~Spriv_r ),
    Event( )
    ]->
     [ ]
  */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction in_event:
  "∀ x #t3.
    (ChannelIn( x ) @ #t3) ⇒
    (∃ #t2.
      (((K( x ) @ #t2) ∧ (#t2 < #t3)) ∧
       (∀ #t1. (Event( ) @ #t1) ⇒ ((#t1 < #t2) ∨ (#t3 < #t1)))) ∧
      (∀ #t1 xp.
        (K( xp ) @ #t1) ⇒ (((#t1 < #t2) ∨ (#t1 = #t2)) ∨ (#t3 < #t1))))"

/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.8.0
Maude version 2.7.1
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2023-08-30 19:02:12.455846 UTC
*/

end

==============================================================================
summary of summaries:

analyzed: wireguard.spthy

  processing time: 1.32s
  
  injIP (all-traces): verified (2 steps)
  injPI (all-traces): verified (6 steps)
  sanity_InitStart (all-traces): falsified - found trace (2 steps)
  sanity_InitAccept (all-traces): falsified - found trace (2 steps)
  sanity_RespRecv (all-traces): falsified - found trace (2 steps)
  sanity_RespAnsw (all-traces): falsified - found trace (2 steps)
  key_secrecy (all-traces): verified (6 steps)

==============================================================================
